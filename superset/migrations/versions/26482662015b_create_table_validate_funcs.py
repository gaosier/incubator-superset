"""create table validate_funcs

Revision ID: 26482662015b
Revises: 3e7850487eed
Create Date: 2018-08-27 11:47:19.322349

"""

# revision identifiers, used by Alembic.
revision = '26482662015b'
down_revision = '3e7850487eed'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('validate_funcs',
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('changed_on', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('validate_rule_funcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.Column('func_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['func_id'], ['validate_funcs.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['validate_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('validate_rule_types')
    op.drop_table('collect_record')
    op.drop_index('name', table_name='validate_types')
    op.drop_table('validate_types')
    op.drop_index('name', table_name='collect_rules')
    op.drop_table('collect_rules')

    op.add_column('validate_error_rule', sa.Column('compare_v', sa.Integer(), nullable=False))
    op.add_column('validate_rules', sa.Column('classify', sa.Enum('func', 'sql', 'other', name='validateenum'), nullable=False))
    op.add_column('validate_rules', sa.Column('compare_v', sa.Integer(), nullable=True))
    op.add_column('validate_rules', sa.Column('config', sa.Text(), nullable=True))
    op.add_column('validate_rules', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.add_column('validate_rules', sa.Column('fields', sa.Text(), nullable=True))
    op.add_column('validate_rules', sa.Column('pro_name', sa.String(length=60), nullable=True))
    op.add_column('validate_rules', sa.Column('sql_expression', sa.Text(), nullable=True))
    op.add_column('validate_rules', sa.Column('start_time', sa.DateTime(), nullable=True))
    op.add_column('validate_rules', sa.Column('tab_name', sa.String(length=60), nullable=True))
    op.add_column('validate_rules', sa.Column('is_multi_days', sa.Boolean(), nullable=True, default=False))
    op.add_column('validate_rules', sa.Column('partition', sa.String(60), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('validate_rules', 'tab_name')
    op.drop_column('validate_rules', 'start_time')
    op.drop_column('validate_rules', 'sql_expression')
    op.drop_column('validate_rules', 'pro_name')
    op.drop_column('validate_rules', 'fields')
    op.drop_column('validate_rules', 'end_time')
    op.drop_column('validate_rules', 'config')
    op.drop_column('validate_rules', 'compare_v')
    op.drop_column('validate_rules', 'classify')
    op.drop_column('validate_error_rule', 'compare_v')
    op.add_column('tasks', sa.Column('collect_rule_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))

    op.create_table('collect_rules',
    sa.Column('created_on', mysql.DATETIME(), nullable=True),
    sa.Column('changed_on', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('rule_type', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('pro_name', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('table_name', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('fields', mysql.TEXT(), nullable=True),
    sa.Column('comment', mysql.TEXT(), nullable=True),
    sa.Column('created_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('changed_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('collect_day', mysql.DATETIME(), nullable=True),
    sa.Column('partion_format', mysql.VARCHAR(length=60), nullable=True),
    sa.Column('sql_expression', mysql.VARCHAR(length=225), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], name='collect_rules_ibfk_1'),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], name='collect_rules_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('name', 'collect_rules', ['name'], unique=True)
    op.create_table('validate_types',
    sa.Column('created_on', mysql.DATETIME(), nullable=True),
    sa.Column('changed_on', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('name', mysql.VARCHAR(length=60), nullable=False),
    sa.Column('comment', mysql.TEXT(), nullable=True),
    sa.Column('created_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('changed_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], name='validate_types_ibfk_1'),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], name='validate_types_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('name', 'validate_types', ['name'], unique=True)
    op.create_table('collect_record',
    sa.Column('created_on', mysql.DATETIME(), nullable=True),
    sa.Column('changed_on', mysql.DATETIME(), nullable=True),
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('task_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('task_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('is_success', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('collect_rule_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('collect_rule_name', mysql.VARCHAR(length=60), nullable=True),
    sa.Column('reason', mysql.TEXT(), nullable=True),
    sa.Column('created_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('changed_by_fk', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], name='collect_record_ibfk_1'),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], name='collect_record_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('validate_rule_types',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('rule_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('type_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['rule_id'], ['validate_rules.id'], name='validate_rule_types_ibfk_1'),
    sa.ForeignKeyConstraint(['type_id'], ['validate_types.id'], name='validate_rule_types_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.drop_table('validate_rule_funcs')
    op.drop_table('validate_funcs')
    # ### end Alembic commands ###
